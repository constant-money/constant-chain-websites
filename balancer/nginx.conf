user nginx;
worker_processes 1;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;
events { worker_connections 1024; }
http {
  include /etc/nginx/mime.types;
  default_type application/octet-stream;
  log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                  '$status $body_bytes_sent "$http_referer" '
                  '"$http_user_agent" "$http_x_forwarded_for"';
  access_log /var/log/nginx/access.log main;
  keepalive_timeout 65;
  gzip on;
  gzip_min_length 1000;
  gzip_proxied expired no-cache no-store private auth;
  gzip_types text/plain application/xml;
  server {
    server_name _;
    return 302 http://user.constant.money;
  }
  server {
    server_name user.constant.money;
    location / {
      proxy_bind $server_addr;
      proxy_pass http://host.docker.internal:3001;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_set_header Host $host;
    }
  }
  server {
    server_name explorer.constant.money;
    location / {
      proxy_bind $server_addr;
      proxy_pass http://host.docker.internal:3002;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_set_header Host $host;
    }
  }
  server {
    server_name portal.constant.money;
    location / {
      proxy_bind $server_addr;
      proxy_pass http://host.docker.internal:3003;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_set_header Host $host;
    }
  }
  server {
    server_name exchange.constant.money;
    location / {
      proxy_bind $server_addr;
      proxy_pass http://host.docker.internal:3004;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_set_header Host $host;
    }
  }
}
